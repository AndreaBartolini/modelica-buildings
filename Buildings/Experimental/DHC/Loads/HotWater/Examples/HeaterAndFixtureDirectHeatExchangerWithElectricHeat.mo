within Buildings.Experimental.DHC.Loads.HotWater.Examples;
model HeaterAndFixtureDirectHeatExchangerWithElectricHeat
  extends Modelica.Icons.Example;
  package Medium = Buildings.Media.Water "Medium model";
  Fluid.Sources.Boundary_pT           souCol(
    nPorts=2,
    redeclare package Medium = Medium,
    T(displayUnit="degC") = 283.15)
              "Source of domestic cold water"
    annotation (Placement(transformation(extent={{-10,-10},{10,10}},
        rotation=90,
        origin={10,-50})));
  ThermostaticMixingValve theMixVal(redeclare package Medium = Medium,
      mMix_flow_nominal=1)                 "Ideal thermostatic mixing valve"
    annotation (Placement(transformation(extent={{0,-12},{20,8}})));
  Fluid.Sources.MassFlowSource_T souDis(
    redeclare package Medium = Medium,
    m_flow=1,
    T(displayUnit="degC") = 298.15,
    nPorts=1)                     "Source of district network water" annotation (
     Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={-20,-50})));
  Modelica.Blocks.Sources.Constant conTHotSet(k(
      final unit="K",
      displayUnit="degC") = 313.15)
    "Temperature setpoint for hot water supply to fixture"
    annotation (Placement(transformation(extent={{-90,-10},{-70,10}})));
  Fluid.Sources.Boundary_pT sinDis(
    redeclare package Medium = Medium,
    T(displayUnit="degC"),
    nPorts=1)              "Sink of district network water" annotation (
      Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={-60,-50})));
  Modelica.Blocks.Sources.Constant conTSetMix(k(
      final unit="K",
      displayUnit="degC") = 308.15)
    "Temperature setpoint for mixed water supply to fixture"
    annotation (Placement(transformation(extent={{-90,20},{-70,40}})));
  DirectHeatExchangerWithElectricHeat gen(
    redeclare package MediumDom = Medium,
    redeclare package MediumHea = Medium,
    mDom_flow_nominal=1,
    mHea_flow_nominal=1)
    "Hot water generated by heat exchanger and auxiliary heat"
    annotation (Placement(transformation(extent={{-52,-10},{-32,10}})));
  Modelica.Blocks.Interfaces.RealOutput PEle(final unit="W")
    "Electric power required for generation equipment"
    annotation (Placement(transformation(extent={{100,70},{120,90}})));
  Modelica.Blocks.Sources.CombiTimeTable sch(
    tableOnFile=true,
    tableName="tab1",
    fileName=Modelica.Utilities.Files.loadResource("modelica://Buildings/Resources/Data/Experimental/DHC/Loads/HotWater/DHW_ApartmentMidRise.mos"),
    smoothness=Modelica.Blocks.Types.Smoothness.ContinuousDerivative,
    extrapolation=Modelica.Blocks.Types.Extrapolation.Periodic)
    "Domestic hot water fixture draw fraction schedule"
    annotation (Placement(transformation(extent={{-90,50},{-70,70}})));

equation

  connect(conTSetMix.y,theMixVal. TMixSet) annotation (Line(points={{-69,30},{-6,
          30},{-6,0},{-1,0}},  color={0,0,127}));
  connect(conTHotSet.y, gen.TDomSet)
    annotation (Line(points={{-69,0},{-53,0}}, color={0,0,127}));
  connect(sch.y[1], theMixVal.yMixSet) annotation (Line(points={{-69,60},{-4,60},
          {-4,6},{-1,6}}, color={0,0,127}));
  connect(gen.port_bDom, theMixVal.port_hot) annotation (Line(points={{-32,6},{
          -12,6},{-12,-6},{0,-6}}, color={0,127,255}));
  connect(theMixVal.port_col, souCol.ports[1]) annotation (Line(points={{0,-10},
          {-12,-10},{-12,-24},{11,-24},{11,-40}}, color={0,127,255}));
  connect(gen.port_aDom, souCol.ports[2]) annotation (Line(points={{-52,6},{-56,
          6},{-56,-26},{9,-26},{9,-40}}, color={0,127,255}));
  connect(gen.port_bHea, sinDis.ports[1])
    annotation (Line(points={{-52,-6},{-60,-6},{-60,-40}}, color={0,127,255}));
  connect(gen.port_aHea, souDis.ports[1])
    annotation (Line(points={{-32,-6},{-20,-6},{-20,-40}}, color={0,127,255}));
  connect(gen.PEle, PEle) annotation (Line(points={{-31,0},{-20,0},{-20,80},{
          110,80}}, color={0,0,127}));
  annotation (experiment(
      StopTime=864000,
      Interval=60,
      Tolerance=1e-06,
      __Dymola_Algorithm="Dassl"));
end HeaterAndFixtureDirectHeatExchangerWithElectricHeat;
